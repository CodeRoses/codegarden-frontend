[{"D:\\uni\\codegarden-frontend\\src\\index.tsx":"1","D:\\uni\\codegarden-frontend\\src\\App.tsx":"2","D:\\uni\\codegarden-frontend\\src\\exercise\\Exercise.tsx":"3","D:\\uni\\codegarden-frontend\\src\\exercise\\Code.tsx":"4","D:\\uni\\codegarden-frontend\\src\\exercise\\CodeEditor.tsx":"5"},{"size":230,"mtime":1637406671576,"results":"6","hashOfConfig":"7"},{"size":1198,"mtime":1637419376470,"results":"8","hashOfConfig":"7"},{"size":255,"mtime":1637421125331,"results":"9","hashOfConfig":"7"},{"size":698,"mtime":1637419740333,"results":"10","hashOfConfig":"7"},{"size":1343,"mtime":1637421461513,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rsi7j4",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\uni\\codegarden-frontend\\src\\index.tsx",[],["23"],"D:\\uni\\codegarden-frontend\\src\\App.tsx",[],"D:\\uni\\codegarden-frontend\\src\\exercise\\Exercise.tsx",["24"],"D:\\uni\\codegarden-frontend\\src\\exercise\\Code.tsx",[],"D:\\uni\\codegarden-frontend\\src\\exercise\\CodeEditor.tsx",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":4,"column":18,"nodeType":"31","messageId":"32","endLine":4,"endColumn":23},{"ruleId":"29","severity":1,"message":"30","line":18,"column":20,"nodeType":"31","messageId":"32","endLine":18,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":19,"column":68,"nodeType":"35","messageId":"36","endLine":19,"endColumn":71,"suggestions":"37"},"jest/no-try-expect",["38"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["39","40"],"no-conditional-expect",{"messageId":"41","fix":"42","desc":"43"},{"messageId":"44","fix":"45","desc":"46"},"suggestUnknown",{"range":"47","text":"48"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"47","text":"49"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[515,518],"unknown","never"]